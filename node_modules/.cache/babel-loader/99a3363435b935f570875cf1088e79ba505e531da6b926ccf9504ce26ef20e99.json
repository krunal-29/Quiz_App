{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mergeSlotProps;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\nvar _extractEventHandlers = _interopRequireDefault(require(\"./extractEventHandlers\"));\nvar _omitEventHandlers = _interopRequireDefault(require(\"./omitEventHandlers\"));\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on a Base UI component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `slotProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\nfunction mergeSlotProps(parameters) {\n  const {\n    getSlotProps,\n    additionalProps,\n    externalSlotProps,\n    externalForwardedProps,\n    className\n  } = parameters;\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    const joinedClasses = (0, _clsx.default)(externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className, className, additionalProps == null ? void 0 : additionalProps.className);\n    const mergedStyle = (0, _extends2.default)({}, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);\n    const props = (0, _extends2.default)({}, additionalProps, externalForwardedProps, externalSlotProps);\n    if (joinedClasses.length > 0) {\n      props.className = joinedClasses;\n    }\n    if (Object.keys(mergedStyle).length > 0) {\n      props.style = mergedStyle;\n    }\n    return {\n      props,\n      internalRef: undefined\n    };\n  }\n\n  // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n  const eventHandlers = (0, _extractEventHandlers.default)((0, _extends2.default)({}, externalForwardedProps, externalSlotProps));\n  const componentsPropsWithoutEventHandlers = (0, _omitEventHandlers.default)(externalSlotProps);\n  const otherPropsWithoutEventHandlers = (0, _omitEventHandlers.default)(externalForwardedProps);\n  const internalSlotProps = getSlotProps(eventHandlers);\n\n  // The order of classes is important here.\n  // Emotion (that we use in libraries consuming Base UI) depends on this order\n  // to properly override style. It requires the most important classes to be last\n  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.\n  const joinedClasses = (0, _clsx.default)(internalSlotProps == null ? void 0 : internalSlotProps.className, additionalProps == null ? void 0 : additionalProps.className, className, externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className);\n  const mergedStyle = (0, _extends2.default)({}, internalSlotProps == null ? void 0 : internalSlotProps.style, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);\n  const props = (0, _extends2.default)({}, internalSlotProps, additionalProps, otherPropsWithoutEventHandlers, componentsPropsWithoutEventHandlers);\n  if (joinedClasses.length > 0) {\n    props.className = joinedClasses;\n  }\n  if (Object.keys(mergedStyle).length > 0) {\n    props.style = mergedStyle;\n  }\n  return {\n    props,\n    internalRef: internalSlotProps.ref\n  };\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","mergeSlotProps","_extends2","_clsx","_extractEventHandlers","_omitEventHandlers","parameters","getSlotProps","additionalProps","externalSlotProps","externalForwardedProps","className","joinedClasses","mergedStyle","style","props","length","keys","internalRef","undefined","eventHandlers","componentsPropsWithoutEventHandlers","otherPropsWithoutEventHandlers","internalSlotProps","ref"],"sources":["E:/react technishal/MUI Quizapp/mui/node_modules/@mui/base/node/utils/mergeSlotProps.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mergeSlotProps;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\nvar _extractEventHandlers = _interopRequireDefault(require(\"./extractEventHandlers\"));\nvar _omitEventHandlers = _interopRequireDefault(require(\"./omitEventHandlers\"));\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on a Base UI component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `slotProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\nfunction mergeSlotProps(parameters) {\n  const {\n    getSlotProps,\n    additionalProps,\n    externalSlotProps,\n    externalForwardedProps,\n    className\n  } = parameters;\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    const joinedClasses = (0, _clsx.default)(externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className, className, additionalProps == null ? void 0 : additionalProps.className);\n    const mergedStyle = (0, _extends2.default)({}, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);\n    const props = (0, _extends2.default)({}, additionalProps, externalForwardedProps, externalSlotProps);\n    if (joinedClasses.length > 0) {\n      props.className = joinedClasses;\n    }\n    if (Object.keys(mergedStyle).length > 0) {\n      props.style = mergedStyle;\n    }\n    return {\n      props,\n      internalRef: undefined\n    };\n  }\n\n  // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n  const eventHandlers = (0, _extractEventHandlers.default)((0, _extends2.default)({}, externalForwardedProps, externalSlotProps));\n  const componentsPropsWithoutEventHandlers = (0, _omitEventHandlers.default)(externalSlotProps);\n  const otherPropsWithoutEventHandlers = (0, _omitEventHandlers.default)(externalForwardedProps);\n  const internalSlotProps = getSlotProps(eventHandlers);\n\n  // The order of classes is important here.\n  // Emotion (that we use in libraries consuming Base UI) depends on this order\n  // to properly override style. It requires the most important classes to be last\n  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.\n  const joinedClasses = (0, _clsx.default)(internalSlotProps == null ? void 0 : internalSlotProps.className, additionalProps == null ? void 0 : additionalProps.className, className, externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className);\n  const mergedStyle = (0, _extends2.default)({}, internalSlotProps == null ? void 0 : internalSlotProps.style, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);\n  const props = (0, _extends2.default)({}, internalSlotProps, additionalProps, otherPropsWithoutEventHandlers, componentsPropsWithoutEventHandlers);\n  if (joinedClasses.length > 0) {\n    props.className = joinedClasses;\n  }\n  if (Object.keys(mergedStyle).length > 0) {\n    props.style = mergedStyle;\n  }\n  return {\n    props,\n    internalRef: internalSlotProps.ref\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}