[{"E:\\react technishal\\MUI Quizapp\\mui\\src\\index.js":"1","E:\\react technishal\\MUI Quizapp\\mui\\src\\App.js":"2","E:\\react technishal\\MUI Quizapp\\mui\\src\\reportWebVitals.js":"3","E:\\react technishal\\MUI Quizapp\\mui\\src\\Navbar.js":"4","E:\\react technishal\\MUI Quizapp\\mui\\src\\Form.js":"5","E:\\react technishal\\MUI Quizapp\\mui\\src\\Quiz.js":"6","E:\\react technishal\\MUI Quizapp\\mui\\src\\Raoutpage.js":"7","E:\\react technishal\\MUI Quizapp\\mui\\src\\Report.js":"8"},{"size":535,"mtime":1691233784000,"results":"9","hashOfConfig":"10"},{"size":943,"mtime":1692192690000,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1691233784000,"results":"12","hashOfConfig":"10"},{"size":2388,"mtime":1692960098000,"results":"13","hashOfConfig":"10"},{"size":2878,"mtime":1692192686000,"results":"14","hashOfConfig":"10"},{"size":3878,"mtime":1692192888000,"results":"15","hashOfConfig":"10"},{"size":601,"mtime":1692190732000,"results":"16","hashOfConfig":"10"},{"size":2784,"mtime":1692192798000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tudm9h",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\react technishal\\MUI Quizapp\\mui\\src\\index.js",[],[],"E:\\react technishal\\MUI Quizapp\\mui\\src\\App.js",[],[],"E:\\react technishal\\MUI Quizapp\\mui\\src\\reportWebVitals.js",[],[],"E:\\react technishal\\MUI Quizapp\\mui\\src\\Navbar.js",["46","47","48","49","50","51","52","53"],[],"import * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n//\r\nimport FormGroup from '@mui/material/FormGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\n\r\n\r\n\r\nexport default function MenuAppBar(props) {\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleChange = (event) => {\r\n    setAuth(event.target.checked);\r\n  };\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}  >\r\n     \r\n      <AppBar position=\"relative\"  >\r\n        \r\n        <Toolbar>\r\n          {/* <IconButton\r\n            size=\"large\"\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            sx={{ mr: 2 }}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\r\n            QUIZ APP\r\n          </Typography>\r\n          \r\n         \r\n          {/* {auth && (\r\n            <div>\r\n              <IconButton\r\n                size=\"large\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n                <MenuItem onClick={handleClose}>My account</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )} */}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n}","E:\\react technishal\\MUI Quizapp\\mui\\src\\Form.js",["54","55"],[],"import React, { useState } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Grid, Button, Typography } from \"@mui/material\";\r\n\r\nexport default function HelperTextMisaligned(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [nameError, setNameError] = useState(false);\r\n  const [emailError, setEmailError] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    if (!name.trim()) {\r\n      setNameError(true);\r\n      return;\r\n    }\r\n    if (!email.trim()) {\r\n      setEmailError(true);\r\n      return;\r\n    }\r\n\r\n    localStorage.setItem(\"Name\", name);\r\n    localStorage.setItem(\"E-mail\", email);\r\n    props.handleButton();\r\n  };\r\n\r\n  return (\r\n    <div style={{}}>\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        style={{\r\n          height: \"92.2vh\",\r\n          padding: \"2rem\",\r\n          backgroundColor: props.pagebg,\r\n          color: props.textclr,\r\n        }}\r\n      >\r\n        <Grid item xs={12} md={6}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            User Information\r\n          </Typography>\r\n          <TextField\r\n            error={nameError}\r\n            helperText={nameError ? \"Please enter your name\" : \"\"}\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            value={name}\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n              setNameError(false);\r\n            }}\r\n            InputLabelProps={{\r\n              style: { color: props.textclr },\r\n            }}\r\n            inputProps={{\r\n              style: { color: props.textclr,backgroundColor: props.mode==\"Dark\"? \"black\":\"white\",cursor:\"pointer\"}, // Change the text color here\r\n            }}\r\n          />\r\n          <TextField\r\n\r\n            error={emailError}\r\n            helperText={emailError ? \"Please enter your e-mail\" : \"\"}\r\n            type=\"email\"\r\n            id=\"email\"\r\n            label=\"E-mail\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            value={email}\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n              setEmailError(false);\r\n            }}\r\n            InputLabelProps={{\r\n              style: { color: props.textclr },\r\n            }}\r\n           inputProps={{\r\n              style: { color: props.textclr,backgroundColor: props.mode==\"Dark\"? \"black\":\"white\",cursor:\"pointer\"}, // Change the text color here\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleClick}\r\n            style={{ marginTop: \"5px\" }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","E:\\react technishal\\MUI Quizapp\\mui\\src\\Quiz.js",["56"],[],"import React, { useState } from 'react';\r\nimport { Grid, Button, Container, Typography, Paper, FormControl, RadioGroup, FormControlLabel, Radio, Box } from '@mui/material';\r\n\r\n\r\nfunction Quiz(props) {\r\n  \r\nlet questions = [\r\n  {\r\n    id: 1,\r\n    question: \"HTML stands for -\",\r\n    option: [\r\n      \"HighText Machine Language\",\r\n      \"HyperText and links Markup Language\",\r\n      \"HyperText Markup Language\",\r\n      \"None of these\",\r\n    ],\r\n    correctans: \"HyperText Markup Language\",\r\n  },\r\n  {\r\n    id: 2,\r\n    question: \"The correct sequence of HTML tags for starting a webpage is -\",\r\n    option: [\r\n      \"Head, Title, HTML, body\",\r\n      \" HTML, Body, Title, Head\",\r\n      \"HTML, Head, Title, Body\",\r\n      \" HTML, Head, Title, HTML\",\r\n    ],\r\n    correctans: \"HTML, Head, Title, Body\",\r\n  },\r\n  {\r\n    id: 3,\r\n    question:\r\n      \" Which of the following element is responsible for making the text bold in HTML?\",\r\n    option: [\"<pre>\", \"<a>\", \"<b>\", \"<br>\"],\r\n    correctans: \"<b>\",\r\n  },\r\n  {\r\n    id: 4,\r\n    question:\r\n      \" CSS stands for -\",\r\n    option: [\"Cascade style sheets\", \"Color and style sheets\", \"Cascading style sheets\", \"None of the above\"],\r\n    correctans: \"Cascading style sheets\",\r\n  },\r\n  {\r\n    id: 5,\r\n    question:\r\n      \" The property in CSS used to change the background color of an element is -\",\r\n    option: [\"bgcolor\", \"color\", \"background-color\", \"All of the above\"],\r\n    correctans: \"background-color\",\r\n  },\r\n  {\r\n    id: 6,\r\n    question:\r\n      \" The CSS property used to control the element's font-size is -\",\r\n    option: [\"text-style\", \"text-size\", \"font-size\", \"None of the above\"],\r\n    correctans: \"font-size\",\r\n  },\r\n];\r\n\r\n  const [ans, setAns] = useState({});\r\n  const [countans, setCountans] = useState(0);\r\n\r\n  const onChangeClick = (e) => {\r\n    const { name, value } = e.target;\r\n    setAns({ ...ans, [name]: value });\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n\r\n\r\n    e.preventDefault();\r\n    let score = 0;\r\n\r\n    questions.forEach((que) => {\r\n      if (que.correctans === ans[que.id]) {\r\n        score++;\r\n      }\r\n    });\r\n\r\n    setCountans(score);\r\n    localStorage.setItem(\"result\", score);\r\n    props.handleButton();\r\n  };\r\n\r\n  \r\n\r\n  return (\r\n    <Box style={{backgroundColor:props.pagebg,color:props.textclr}}>\r\n    <Container  >\r\n      <Paper elevation={3} style={{ padding: '2rem' ,backgroundColor:props.pagebg,color:props.textclr }}>\r\n        <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n          Quiz Questions\r\n        </Typography>\r\n        {questions.map((que) => (\r\n          <div key={que.id}>\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n             <h2> ({que.id}) {que.question} </h2>\r\n            </Typography>\r\n            <FormControl component=\"fieldset\">\r\n              <RadioGroup\r\n                name={que.id}\r\n                value={ans[que.id] || ''}\r\n                onChange={onChangeClick}\r\n              >\r\n                {que.option.map((op) => (\r\n                  <FormControlLabel\r\n                    key={op}\r\n                    value={op}\r\n                    control={<Radio />}\r\n                    label={op}\r\n                  />\r\n                ))}\r\n              </RadioGroup>\r\n            </FormControl>\r\n            <hr />\r\n          </div>\r\n        ))}\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"space-evenly\"\r\n          alignItems=\"flex-end\"\r\n          style={{ marginBottom: \"10px\" }}\r\n        >\r\n          <Button variant=\"contained\" color=\"error\" onClick={() => setAns({})} xs={12}>\r\n            Reset\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleClick}>\r\n            Submit\r\n          </Button>\r\n          \r\n        </Grid>\r\n      </Paper>\r\n    </Container>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","E:\\react technishal\\MUI Quizapp\\mui\\src\\Raoutpage.js",["57","58","59"],[],"import React from 'react'\r\nimport Form from './Form'\r\nimport Quiz from './Quiz';\r\nimport Report from './Report';\r\n\r\n function Raoutpage(props) {\r\n  if (props.page == 1) {\r\n    return   <Form handleButton={props.handleButton} pagebg={props.pagebg} textclr={props.textclr} mode={props.mode}/>\r\n  }\r\n  else if (props.page == 2){\r\n    return <Quiz  handleButton={props.handleButton} pagebg={props.pagebg} textclr={props.textclr} />\r\n  }\r\n  else if (props.page == 3){\r\n    return <Report  handleButton={props.handleButton} pagebg={props.pagebg} textclr={props.textclr} />\r\n  }\r\n}\r\nexport default Raoutpage;","E:\\react technishal\\MUI Quizapp\\mui\\src\\Report.js",[],[],{"ruleId":"60","severity":1,"message":"61","line":8,"column":8,"nodeType":"62","messageId":"63","endLine":8,"endColumn":17},{"ruleId":"60","severity":1,"message":"64","line":9,"column":8,"nodeType":"62","messageId":"63","endLine":9,"endColumn":24},{"ruleId":"60","severity":1,"message":"65","line":10,"column":8,"nodeType":"62","messageId":"63","endLine":10,"endColumn":14},{"ruleId":"60","severity":1,"message":"66","line":15,"column":10,"nodeType":"62","messageId":"63","endLine":15,"endColumn":14},{"ruleId":"60","severity":1,"message":"67","line":16,"column":10,"nodeType":"62","messageId":"63","endLine":16,"endColumn":18},{"ruleId":"60","severity":1,"message":"68","line":18,"column":9,"nodeType":"62","messageId":"63","endLine":18,"endColumn":21},{"ruleId":"60","severity":1,"message":"69","line":22,"column":9,"nodeType":"62","messageId":"63","endLine":22,"endColumn":19},{"ruleId":"60","severity":1,"message":"70","line":26,"column":9,"nodeType":"62","messageId":"63","endLine":26,"endColumn":20},{"ruleId":"71","severity":1,"message":"72","line":61,"column":72,"nodeType":"73","messageId":"74","endLine":61,"endColumn":74},{"ruleId":"71","severity":1,"message":"72","line":83,"column":72,"nodeType":"73","messageId":"74","endLine":83,"endColumn":74},{"ruleId":"60","severity":1,"message":"75","line":61,"column":10,"nodeType":"62","messageId":"63","endLine":61,"endColumn":18},{"ruleId":"71","severity":1,"message":"72","line":7,"column":18,"nodeType":"73","messageId":"74","endLine":7,"endColumn":20},{"ruleId":"71","severity":1,"message":"72","line":10,"column":23,"nodeType":"73","messageId":"74","endLine":10,"endColumn":25},{"ruleId":"71","severity":1,"message":"72","line":13,"column":23,"nodeType":"73","messageId":"74","endLine":13,"endColumn":25},"no-unused-vars","'FormGroup' is defined but never used.","Identifier","unusedVar","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'auth' is assigned a value but never used.","'anchorEl' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'handleMenu' is assigned a value but never used.","'handleClose' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'countans' is assigned a value but never used."]